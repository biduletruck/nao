<?php

namespace AppBundle\Repository;

/**
 * ObservationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ObservationRepository extends \Doctrine\ORM\EntityRepository
{
    public function findMyObservationsWaiting($user){
        return $this
            ->createQueryBuilder('o')
            ->where('o.user = :user' )
            ->andWhere('o.active = false')
            ->orderBy('o.id', 'DESC')
            ->setParameter('user', $user)
            ->getQuery()
            ->getResult()
            ;
    }

    public function findMyObservationsValidate($user){
        return $this
            ->createQueryBuilder('o')
            ->where('o.user = :user' )
            ->andwhere('o.active = true')
            ->orderBy('o.id', 'DESC')
            ->setParameter('user', $user)
            ->getQuery()
            ->getResult()
            ;
    }

    public function findMyObservations($user){
        return $this
            ->createQueryBuilder('o')
            ->where('o.user = :user' )
            ->orderBy('o.id', 'DESC')
            ->setParameter('user', $user)
            ->getQuery()
            ->getResult()
            ;
    }

    public function countMyObservationsWaiting($user){
        return $this
            ->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->where('o.user = :user' )
            ->andWhere('o.active = false')
            ->setParameter('user', $user)
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function countMyObservationsValidate($user){
        return $this
            ->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->where('o.user = :user' )
            ->andwhere('o.active = true')
            ->setParameter('user', $user)
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function countMyObservations($user){
        return $this
            ->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->where('o.user = :user' )
            ->setParameter('user', $user)
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function countObservationsWaiting(){
        return $this
            ->createQueryBuilder('o')
            ->select('COUNT(o)')
            ->where('o.active = false')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }
}
